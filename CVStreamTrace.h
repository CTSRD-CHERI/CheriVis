#import <Foundation/NSString.h>
#import "CVDisassembler.h"

/**
 * The CVStreamTrace class encapsulates a stream trace from the CHERI debug
 * unit.  This includes a sequence of instructions and the inferred machine
 * state arising.
 */
@interface CVStreamTrace : NSObject
/**
 * Initialises the stream trace object with some stream data.  This data is in
 * the binary format generated by cherictl -b streamtrace.
 */
- (id)initWithTraceData: (NSData*)aTrace;
/**
 * Sets the index of the stream trace object to a specified offset into the
 * stream.  Stateful accessor methods use this index.  Returns YES if passed a
 * valid index, NO otherwise.
 */
- (BOOL)setStateToIndex: (NSInteger)anIndex;
/**
 * Returns the number of entries in the trace that this object was initialised
 * with.
 */
- (NSInteger)numberOfTraceEntries;
/**
 * Returns the (decoded) instruction for the current index in the stream.
 */
- (NSString*)instruction;
/**
 * Returns the instruction for the current index in the stream, in encoded (big
 * endian) form.
 */
- (uint32_t)encodedInstruction;
/**
 * Returns an array of the integer registers whose value can be inferred at
 * this point in the trace.  Values that can not be inferred are represented by
 * the placeholder string "???".
 */
- (NSArray*)integerRegisters;
/**
 * Returns an array of the ABI names of the integer registers returned by
 * -integerRegisters.
 */
- (NSArray*)integerRegisterNames;
/**
 * Returns the program counter value for the current index in the stream trace.
 */
- (uint64_t)programCounter;
/**
 * Returns the type of the instruction at the current index in the stream.
 */
- (CVInstructionType)instructionType;
/**
 * Returns the value of the exception code.  A value of 31 indicates no
 * exception (this is really a signed 5-bit quantity, with -1 indicating no
 * exception).
 */
- (uint8_t)exception;
/**
 * Returns YES if the current instruction is from a kernelspace address, NO if
 * it is from a userspace address.
 */
- (BOOL)isKernel;
@end
